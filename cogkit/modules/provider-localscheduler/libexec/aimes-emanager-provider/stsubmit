#!/bin/bash

source "$SWIFT_HOME/libexec/aimes-emanager-provider/aimes-swift-config.sh"

AIMES_LOCK=$RUNDIR/scripts/AIMES_lock
PID_FILE=$AIMES_LOCK/pid_file

SUBMIT_SCRIPT=$PWD/$RUNDIR/scripts/aimes.$(date +"%H.%M.%S").$RANDOM.submit
touch $SUBMIT_SCRIPT

start_session()
{
    # Ensure that only one application acquires the lock and starts the AIMES_SERVER
    if mkdir "$AIMES_LOCK" ; then
        log "Locking succeeded"
        SESSION_ID=$(python $AIMES_CLIENT -e $ENDPOINT -l $RUNDIR/aimes_client.log --init)
        echo $SESSION_ID > $RUNDIR/session_id

        echo "[PID:$$] Done" > $AIMES_LOCK/release
    else
        log "Could not acquire lock"
        # spin till $AIMES_LOCK/release file is created
        while [[ ! -f $AIMES_LOCK/release ]]
        do
            sleep 1
            log "Waiting for lock holder to finish"
        done
        log "lock holder has released lock"
    fi
}

start_session;
SESSION_ID=$(cat $RUNDIR/session_id)
log "SESSION ID: $SESSION_ID"

log "[DEBUG] SESSION_ID : $SESSION_ID"

while read LINE; do
    echo $LINE >> $SUBMIT_SCRIPT
done < /dev/stdin

log "##############SUBMIT_SCRIPT###################"
cat $SUBMIT_SCRIPT >> $LOG
log "##############SUBMIT_SCRIPT###################"
log "[DEBUG] PWD : $PWD"

CMD="python $AIMES_CLIENT --logfile $SUBMIT_SCRIPT.stdout --submit $SUBMIT_SCRIPT --endpoint $ENDPOINT --session $SESSION_ID"
JOBINFO=$($CMD)
RETCODE=$?

log "SUBMIT SCRIPT : $SUBMIT_SCRIPT"
log "SUBMIT CMD    : $CMD"
log "JOBINFO       : $JOBINFO"
log "RETCODE       : $RETCODE"

echo "jobid=$JOBINFO"

exit $RETCODE

